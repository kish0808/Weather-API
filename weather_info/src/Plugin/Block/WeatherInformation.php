<?php

namespace Drupal\weather_info\Plugin\Block;
use Drupal\Core\Block\BlockBase;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Session\AccountInterface;


/**
 * Provides a 'CustomBlock' block.
 *
 * @Block(
 *  id = "weather_info_block",
 *  admin_label = @Translation("weather block"),
 * )
 */

class WeatherInformation  extends BlockBase {




  public function build(){

    $infomation = \Drupal::service('weather_info.weather_parser')->weatherInfo($Weatherinfo);

    $build = [];
    $build['weather_info_city']['#markup'] = '<p>Your Location: ' . $infomation['location'] . '</p>';
    $build['weather_info_temp']['#markup'] = '<p>Temperature: ' . $infomation['temp'] . '</p>';
    $build['weather_info_details']['#markup'] = '<p>Summary: ' . $infomation['details'] . ' F</p>';


    $build['#cache'] = [
      'contexts' => ['user'],
    ];


    return $build;

  }

  public function blockAccess( AccountInterface $account) {
    return parent::blockAccess($account); // TODO: Change the autogenerated stub
  }

  public function blockForm($form, FormStateInterface $form_state) {

    $form['city'] = array(
      '#type' => 'textfield',
      '#title' => $this->t('city'),
      '#description' => $this->t('Your city'),
      '#default_value' => isset($this->configuration['city']) ? $this->configuration['city'] : '',
      '#maxlength' => 64,
      '#size' => 64,
      '#weight' => '1',
    );

    $form['temperature'] = array(
      '#type' => 'textfield',
      '#title' => $this->t('temperature'),
      '#description' => $this->t('Your city temperature'),
      '#default_value' => isset($this->configuration['temperature']) ? $this->configuration['temperature'] : '',
      '#maxlength' => 64,
      '#size' => 64,
      '#weight' => '1',
    );

    $form['date'] = array(
      '#type' => 'date',
      '#size' => 20,
      '#date_date_format' => 'd/m/Y',

    );
    return $form;
  }



  public function blockSubmit($form, FormStateInterface $form_state) {
    $this->configuration['city'] = $form_state->getValue('city');
    $this->configuration['temperature'] = $form_state->getValue('temperature');
    $this->configuration['date'] = $form_state->getValue('date');
  }

  public function getCacheContexts() {
    $cache = parent::getCacheContexts(); // TODO: Change the autogenerated stub
    $cache += ['user'];

    return $cache;
  }
}